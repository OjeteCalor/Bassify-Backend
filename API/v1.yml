openapi: '3.0.3'

info:
  title: Bassify
  version: '1.0'

servers:
  - url: https://localhost:0000/api/v1


tags:
  - name: Tracks
    x-tag-expanded: true
  - name: Account
    x-tag-expanded: true

paths:

  ######################### TRACKS #########################
  /tracks/discover/random/{id_user}:
    post:
      description: | 
        Devuelve las X canciones nuevas para descubrir, 
        usando el algoritmo aleatorio.
      tags:
        - Tracks

      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/status'

                    tracks:
                      type: array
                      description: "El array con todas las canciones"
                      items:
                        $ref: '#/components/schemas/Track'
      parameters:
        - $ref: '#/components/parameters/id_user'



  /tracks/discover/preferences/{id_user}:
    post:
      description: | 
        Devuelve las X canciones nuevas para descubrir, 
        usando el algoritmo de preferencias.
      tags:
        - Tracks

      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/status'

                    tracks:
                      type: array
                      description: "El array con todas las canciones"
                      items:
                        $ref: '#/components/schemas/Track'
      parameters:
        - $ref: '#/components/parameters/id_user'



  /tracks/discover/listened/{id_user}:
    post:
      description: | 
        Recibir las interacciones del usuario con las canciones recomendadas (like / dislike) 
      tags:
        - Tracks

      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/status'
      parameters:
        - $ref: '#/components/parameters/id_user'



  /tracks/genres/get:
    post:
      description: | 
        Devolver lista de generos posibles (para las preferencias o el buscador) 
      tags:
        - Tracks

      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    genres:
                      type: array
                      description: Un array con el nombre de todos los generos
                      items:
                        type: string
      parameters: []


      
        





  ######################### ACCOUNT #########################
  /account/login:
    get:
      description: | 
        Recibe los datos del usuario del formulario de inicio de sesion
      tags:
        - Account

      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/status'
                    is_new:
                      type: boolean
                      description: Si es true, se redirije a la pagina de 'preferencias iniciales'
                    created_user:
                      type: string
                      nullable: true
      
      parameters:
        - name: "user_spotify_id"
          in: header
          required: true
          description: ID del usuario de spotify tras iniciar sesion
          schema:
            type: string


  
  /account/create/preferences:
    post:
      description: | 
        Envia las preferencias de genero del usuario en su primer inicio de sesion
      tags:
        - Account

      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/status'
      
      parameters:
        - name: "selected_preferences"
          in: header
          required: true
          description: ID del usuario activo de la sesion
          schema:
            type: array








components:

  ############### PARAMETERS ###############
  parameters:
    id_user:
      name: id_user
      in: path
      required: true
      description: ID del usuario activo de la sesion
      schema:
        type: string





  ############### SCHEMAS ###############
  schemas: 

    status:
      type: number
      description: | 
        El estado interno del servidor de la peticion.
      default: 200

    Track:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

        previewUrl:
          type: string
          description: "Una URL a un archivo.mp3 de una preview sonora"
        imageUrl:
          type: string
          description: "Una URL a la imagen de portada"

        author:
          type: object
          description: "El author"
          $ref: '#/components/schemas/Artist'


    Artist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

        genres:
          type: array
          items:
            type: string
                                
